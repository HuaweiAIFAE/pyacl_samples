# General Options
yolov5_version: "yolov5s" # version of the yolov5<model_size>
data_dir: "/workspace/COCO2017/" # Data Directory path Ex: ../COCO2017/train/
output_dir: "./output"


# ModelArts Options
enable_modelarts: False
# Url for modelarts
data_url: ""
train_url: ""
checkpoint_url: ""
outputs_url: ""
# Path for local
data_path: "/cache/data"
output_path: "/cache/train"
load_path: "/cache/checkpoint_path"
device_target: "Ascend"
need_modelarts_dataset_unzip: True
modelarts_dataset_unzip_name: "coco"


# Train Options
train_img_dir: "train2017" # Training images path for training Ex: ../COCO2017/train/val2017/
train_json_file: "annotations/instances_train2017.json" # Annotations file for training Ex: ../COCO2017/train/annotations/instances_train2017.json
#
resume_yolov5: ""
pretrained_backbone: ""
pretrained_checkpoint: ""
#
train_per_batch_size: 64 # Amount of batch size in train
eval_per_step: 2 # Run eval every <eval_per_step>, 0 means don't apply evaluation during the training process
T_max: 300         # please set 320 when run on 1p
max_epoch: 300     # please set 320 when run on 1p
warmup_epochs: 20  # please set 4 when run on 1p
lr_scheduler: "cosine_annealing"
lr: 0.02
lr_epochs: "220,250"
lr_gamma: 0.1
eta_min: 0.0
weight_decay: 0.0005
momentum: 0.9
loss_scale: 1024
label_smooth: 0
label_smooth_factor: 0.1
log_interval: 100
is_distributed: 0
bind_cpu: True
device_num: 8
rank: 0
group_size: 1
need_profiler: 0
resize_rate: 10


# Eval Options
eval_img_dir: "val2017" # Validation dataset path for evaluation Ex: ../COCO2017/train/val2017/, if you want to use eval during the training  
eval_json_file: "annotations/instances_val2017.json" # JSON file for Val Dataset Ex: ../COCO2017/train/annotations/instances_val2017.jso
#
eval_device: "CPU" # Device to run evaluations
eval_ckpt_file: "./output/" # Path to pretrained .ckpt file or folder(It gets last file from folder by date) Ex: ./output/
eval_img_shape : [640, 640] # Evaluation image input
#
eval_per_batch_size : 32 # Per image amount for per evaluation step !! Note !! if the eval operation will be performed during the training, train_batch is taken into account.
eval_batch_limit: 0 # Amount of how many batch will you use for evaluations. 0 for no limit
eval_nms_thresh: 0.45 # nms parameter for bboxes
ignore_threshold: 0.6 # Threshold for confidence of detections
test_ignore_threshold: 0.001 # Threshold for confidence of detections before nms
multi_label: True
multi_label_thresh: 0.1


# Export Options
device_id: 0
batch_size: 1
ckpt_file: ""
file_name: "yolov5"
file_format: "MINDIR"


# Other Options
hue: 0.015
saturation: 1.5
value: 0.4
jitter: 0.3
num_classes: 80
max_box: 150
#
checkpoint_filter_list: ['feature_map.back_block1.conv.weight', 'feature_map.back_block1.conv.bias',
                         'feature_map.back_block2.conv.weight', 'feature_map.back_block2.conv.bias',
                         'feature_map.back_block3.conv.weight', 'feature_map.back_block3.conv.bias']
# h->w
anchor_scales: [[12, 16],
                [19, 36],
                [40, 28],
                [36, 75],
                [76, 55],
                [72, 146],
                [142, 110],
                [192, 243],
                [459, 401]]
#
out_channel: 255  # 3 * (num_classes + 5)
#
input_shape: [[3, 32, 64, 128, 256, 512, 1],
              [3, 48, 96, 192, 384, 768, 2],
              [3, 64, 128, 256, 512, 1024, 3],
              [3, 80, 160, 320, 640, 1280, 4]]


# Test Parameters
test_img_shape: [640, 640]

labels: [ 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat',
          'traffic light', 'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat',
          'dog', 'horse', 'sheep', 'cow', 'elephant', 'bear', 'zebra', 'giraffe', 'backpack',
          'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball',
          'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard', 'tennis racket',
          'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',
          'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair',
          'couch', 'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote',
          'keyboard', 'cell phone', 'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book',
          'clock', 'vase', 'scissors', 'teddy bear', 'hair drier', 'toothbrush' ]

coco_ids: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27,
            28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53,
            54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80,
            81, 82, 84, 85, 86, 87, 88, 89, 90 ]

---

# Help Description for Each Configuration
# General Options
yolov5_version: "Version of the yolov5<model_size>"
data_dir: "Data directory path"
output_dir: "Training outputs path"

# ModelArts Options
enable_modelarts:
data_url: "Data url for modelarts (remote server)"
train_url: "Train script url for modelarts (remote server)"
checkpoint_url: "Checkpoint file url for modelarts (remote server)"
outputs_url: "Outputs folder url for modelarts (remote server)"
data_path: "Local data path"
output_path: "Local output path"
load_path: "Local loading path"
device_target: "Local loading path"
need_modelarts_dataset_unzip: "Define if modelarts needs unzip dataset or not"
modelarts_dataset_unzip_name: "Define unziped dataset name"

# Train Options
train_img_dir: "Training images path"
train_json_file: "Training annotation file path"
resume_yolov5: "The ckpt file of YOLOv5, which used to fine tune"
pretrained_backbone: "The ckpt file of CspDarkNet53"
pretrained_checkpoint: "The ckpt file of YOLOv5CspDarkNet53"
train_per_batch_size: "Batch size for training"
eval_per_step: "Run evaluation per X steps"
T_max: "T-max in cosine_annealing scheduler"     
max_epoch: "Max epoch num to train the model"
warmup_epochs: "Warmup epochs"
lr_scheduler: "Learning rate scheduler, options: exponential, cosine_annealing"
lr: "Learning rate"
lr_epochs: "Epoch of changing of lr changing, split with ','"
lr_gamma: "Decrease lr by a factor of exponential lr_scheduler"
eta_min: "Eta_min in cosine_annealing scheduler"
weight_decay: "Weight decay factor"
momentum: "Momentum"
loss_scale: "Static loss scale"
label_smooth: "Whether to use label smooth in CE"
label_smooth_factor: "Smooth strength of original one-hot"
log_interval: "Logging interval steps"
ckpt_interval: "Save checkpoint interval"
is_save_on_master: "Save ckpt on master or all rank, 1 for master, 0 for all ranks"
is_distributed: "Distribute train or not, 1 for yes, 0 for no"
bind_cpu: "Whether bind cpu when distributed training"
device_num: "Device numbers per server"
rank: "Local rank of distributed"
group_size: "World size of device"
need_profiler: "Whether use profiler 0 for no, 1 for yes"
resize_rate: "Resize rate for multi-scale training"

# Eval Options
eval_img_dir: "Evaluation images path"
eval_json_file: "Evaluation annotation file path"
eval_device: "Device running on evaluation process ('CPU' or 'Ascend')"
eval_ckpt_file: "model_path, local checkpoint model to load"
eval_per_batch_size: "Batch size for evaluation"
eval_batch_limit: "Amount of how many batch will you use for evaluation"
eval_nms_thresh: "NMS threshold value for evaluation"
ignore_threshold: "Value of ignore threshold"
test_ignore_threshold: "Value of test ignore threshold"
multi_label: "use multi label to nms"
multi_label_thresh: "multi label thresh"

# Export Options
device_id: "Device id for export"
batch_size: "batch size for export"
ckpt_file: "Checkpoint file path for export"
file_name: "Output file name for export"
file_format: "File format for export"

# Other Options
hue: "Hue value of HSV color space (for data agumentation & color distortion)"
saturation: "saturation value of HSV color space (for data agumentation & color distortion)"
value: "Value of HSV color space (for data agumentation & color distortion)"
jitter: "A flicker or fluctuation in display image (for data agumentation & color distortion)"
num_classes: "Class number"
max_box: "max value of padding"
checkpoint_filter_list: "list of checkpoint models"
anchor_scales: "anchors"
out_channel: "output shapes"
input_shape: "input shapes"

# Test Parameters
test_img_shape: "Image shape for test"
labels: "The label of train data"
coco_ids: "Ä°mage ids for COCO dataset"